
/*
btn:link and btn:visited is to style the link to not be blue (before clicked)
or purple (after clicked)
*/

.btn {
    &,
    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1rem 3rem;
        display: inline-block;
        border-radius: 10rem;
        font-size: 1.6rem;
        transition: all .2s;
        position: relative;
        font-size: $default-font-size;

        //Change for the <button> element
        border: none;
        cursor: pointer;

        @include respond(tab-port){
        padding: 1rem 2rem;
    }
    }
    
    
    /*
    btn:hover & btn:active use the transform to give an "pressing" effect
    Note that the box-shadow property changes in the different states
    */
    &:hover{
        transform: translateY(-3px);
        box-shadow: 0 10px 20px rgba($color-black,.2);

        /*
    When we hover the button, we will create some transfomations
    to the ::AFTER sudo element.
    */
        &::after{
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }
    
    &:active,
    &:focus{
        outline: none;
        transform: translateY(-1px);
        box-shadow: 0 5px 10px rgba($color-black,.2);
    }
    
    &--white{
        background-color: $color-white;
        color: $color-grey-dark;

        &::after{
            background-color: $color-white;
        }
    }

    &--green{
        background-color: $color-primary;
        color: $color-white;
        margin: 5rem;

        @include respond(tab-port){
        margin: 2rem;

        }

        @include respond(phone){
        font-size: 1rem;
        margin: 0.5rem;
        padding: 1rem;
    }

        &::after{
            background-color: $color-primary;
        }
    }
    
    /*
    ::after = sudo element linked to the .btn element.
    CSS creates a sudo element right AFTER or BEFORE the .btn
    This is used to create effects.
    */
    &::after{
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all .6s;
    }
      
    
    
    /*
    Animation-fill-mode: backwards
        set the style of the 0% of the animation before the animation start
    */
    &--animated{
        animation: moveInBottom 1.4s ease-out .75s;
        animation-fill-mode: backwards;
    }

}

.btn-text{
    &:link,
    &:visited{
        font-size: $default-font-size;
        color:$color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px;
        transition: all .2s;
    }

    &:hover{
        background-color: $color-primary;
        color: $color-white;
        transform: translateY(-2px);
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
    }

    &:active{
        transform: translateY(1px);
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
    }

}

.active{
    color:$color-secondary-light;

    &:hover{
        background-color: $color-secondary-light;
    }
}


.exit{
    position: absolute;
    top: 90%;
    right: 5%;
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 100%;
    background-color: $color-primary;
    color: white;
    border: none;
    text-decoration: none;

    &:hover{
        background-color: $color-primary;
        color: $color-white;
        transform: translateY(-2px);
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
    }

    &:active{
        transform: translateY(1px);
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
    }
}

.add{
    width: 2.5rem;
    height: 2.5rem;
    border: none;
    border-radius: 100%;
    background-color: $color-primary;
    color: white;
    text-align: center;
    text-decoration: none;
    display: inline-block;

    &:hover{
        background-color: $color-primary;
        color: $color-white;
        transform: translateY(-2px);
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
    }

    &:active{
        transform: translateY(1px);
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
    }
}

.sub{
    width: 2.5rem;
    height: 2.5rem;
    border: none;
    border-radius: 100%;
    background-color: $color-secondary-dark;
    color: white;
    text-align: center;
    text-decoration: none;
    display: inline-block;

    &:hover{
        color: $color-white;
        transform: translateY(-2px);
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
    }

    &:active{
        transform: translateY(1px);
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
    }
}

.submit{
    &,
    &:link,
    &:visited {
        max-width: 20rem;
        flex-basis: 60%;
        text-transform: uppercase;
        text-decoration: none;
        padding: 0.7rem 2rem;
        display: inline-block;
        border-radius: 10rem;
        font-size: 1.4rem;
        transition: all .2s;
        // position: absolute;
        // bottom: 3rem;
        // right: 50%;
        //transform: translate(50%, 50%);
        font-size: $default-font-size;
     

        //Change for the <button> element
        border: none;
        cursor: pointer;

        @include respond(phone){
        font-size: 1rem;
        margin: 1rem 0 1rem 0; 
        padding: 1rem;
    }
    }

    
}